<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Windows.Media" #>
<!-- saved from url=(0016)http://localhost -->
<!DOCTYPE html>
<html>
	<head>
		<title></title>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />

		<script type="text/x-mathjax-config">
MathJax.Hub.Config({
			showProcessingMessages: false,
			messageStyle: "none",
			"HTML-CSS": { linebreaks: { automatic: true }, width: 'container' },
			tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]},
			displayAlign: "left",
			displayIndent: "2em"
			});
		</script>

		<script type="text/javascript" async src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML">
MathJax.Hub.Queue(function () {
	window.external.RaiseRenderingDone();
});
		</script>
	</head>

	<body style="color:<#= ColorToString(ForegroundColor) #>;background:<#= ColorToString(BackgroundColor) #>;font-family:<#= FontFamily #>;font-size:<#= FontSize #>px">
		<div id="myDiv">
$\newcommand{\var}[1]{\mathord{\mathit{#1}}}$
<#= Source #>
		</div>
	</body>
</html>
<#+ 
public Color ForegroundColor { get; set; }
public Color BackgroundColor { get; set; }
public string FontFamily { get; set; }
public double FontSize { get; set; }
public string Source { get; set; }

private static string ColorToString(Color col) => $"rgb({col.R},{col.G},{col.B})";
#>